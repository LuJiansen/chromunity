#' @import GenomicRanges
#' @importFrom data.table data.table
#' @importFrom data.table rbindlist
#' @importFrom data.table set
#' @importFrom data.table setDT
#' @importFrom data.table setkey
#' @importFrom data.table setkeyv
#' @importFrom data.table setnames
#' @importFrom data.table transpose
#' @import Matrix 
#' @importFrom gUtils gr2dt
#' @importFrom gUtils dt2gr
#' @importFrom stats median
#' @importFrom stats na.omit
#' @importFrom MASS ginv
#' @importFrom utils globalVariables
#' @import dplyr




##############################
## prepare_detergent
##############################
#' @name prepare_detergent
#'
#' @title This is the frist stage and involves preparing the Panel of Normals (PON)
#' that will be used for online decomposition
#' 
#' @description This function takes in gRanges outputs from fragCounter and extracts GC corrected
#' read count data and carries rPCA decomposition on the matrix thus created. The normal samples used to form the PON can be selected randomly or by clustering the genomic bacground or all samples can be used.
#' 
#' @export
#' @param normal.table.path character path to data.table containing two columns "sample" and "normal_cov". See manual for details
#' 
#' @param use.all boolean (default == TRUE). If all normal samples are to be used for creating PON
#' 
#' @param choose.randomly boolean (default == FALSE). If a random subset of normal samples are to be used for creating PON.
#' 
#' @param choose.by.clustering boolean (default == FALSE). Clusters normal samples based on the genomic background and takes a random sample from within the clusters.
#' 
#' @param number.of.samples interger (default == 50). If choose.by.clustering == TRUE, this is the number of clusters at which to cut tree.
#'
#' @param tolerance numeric (default == 0.0001). Tolerance for error for batch rPCA. We suggest keeping this value.
#' 
#' @param save.pon boolean (default == FALSE). If PON needs to be saved.
#' 
#' @param path.to.save charater (default == NA). Path to save the PON created if save.pon == TRUE.
#' 
#' @param num.cores interger (default == 1). Number of cores to use for parallelization
#'
#' @param verbose boolean (default == TRUE). Outputs progress.
#' 
#' @return \code{prepare_detergent} returns a list containing the following components:
#' 
#'    \item{L}{  array_like; \cr
#'              low-rank component; \eqn{(m, n)} dimensional array.
#'    }
#'    \item{S}{  array_like; \cr
#'              sparse component; \eqn{(m, n)} dimensional array.
#'    }
#'    \item{k}{  numeric; \cr
#'              estimated rank of the matrix; used in the online implementation.
#'    }
#'    \item{U.hat}{  array_like; \cr
#'              left singular vectors of L; \eqn{(m, k)} dimensional array.
#'    }
#'    \item{V.hat}{  array_like; \cr
#'              right singular vectors of L; \eqn{(n, k)} dimensional array.
#'    }
#'    \item{sigma.hat}{  array_like; \cr
#'              singular values; vector of length \eqn{(k)}.
#'    }
#' 
#' @author Aditya Deshpande
